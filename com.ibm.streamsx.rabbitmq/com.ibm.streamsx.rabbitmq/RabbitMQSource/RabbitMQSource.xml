<?xml version="1.0" encoding="UTF-8"?><operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <javaOperatorModel>
    <!--Generated from com.ibm.streamsx.rabbitmq.RabbitMQSource in impl/java/bin/com/ibm/streamsx/rabbitmq/RabbitMQSource$StreamsModel.class at Fri Apr 21 12:51:01 CEST 2017-->
    <context>
      <description>This operator acts as a RabbitMQ consumer, pulling messages from a RabbitMQ broker. The broker is assumed to be already configured and running. The outgoing stream can have three attributes: message, routing_key, and messageHeader. The message is a required attribute. The exchange name, queue name, and routing key can be specified using parameters. If a specified exchange does not exist, it will be created as a non-durable exchange. If a queue name is specified for a queue that already exists, all binding parameters (exchangeName and routing_key) will be ignored. Only queues created by this operator will result in exchange/routing key bindings. All exchanges and queues created by this operator are non-durable and auto-delete.This operator supports direct, fanout, and topic exchanges. It does not support header exchanges. 

**Behavior in a Consistent Region**
This operator cannot participate in a consistent region.

**AppConfig**: The hierarchy of credentials goes: credentials from the appConfig beat out parameters (username and password). The valid key-value pairs in the appConfig are &lt;userPropName&gt;=&lt;username&gt; and &lt;passwordPropName&gt;=&lt;password&gt;, where &lt;userPropName&gt; and &lt;passwordPropName&gt; are specified by the corresponding parameters. This operator will only automatically recover with new credentials from the appConfig if automaticRecovery is set to true. </description>
      <metrics>
        <metric>
          <name>isConnected</name>
          <description>Describes whether we are currently connected to the RabbitMQ server.</description>
          <kind>Gauge</kind>
        </metric>
        <metric>
          <name>reconnectionAttempts</name>
          <description>The number of times we have attempted to reconnect since the last successful connection.</description>
          <kind>Counter</kind>
        </metric>
      </metrics>
      <executionSettings>
        <className>com.ibm.streamsx.rabbitmq.RabbitMQSource</className>
      </executionSettings>
      <libraryDependencies>
        <library>
          <cmn:description>Operator class library</cmn:description>
          <cmn:managedLibrary>
            <cmn:libPath>../../impl/java/bin</cmn:libPath>
            <cmn:libPath>../../opt/downloaded/*</cmn:libPath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
    </context>
    <parameters>
      <parameter>
        <name>URI</name>
        <description>Convenience URI of form: amqp://userName:password@hostName:portNumber/virtualHost. If URI is specified, you cannot specify username, password, and host.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>appConfigName</name>
        <description>This parameter specifies the name of application configuration that stores client credentials, the property specified via application configuration is overridden by the application parameters. The hierarchy of credentials goes: credentials from the appConfig beat out parameters (username and password). The valid key-value pairs in the appConfig are &lt;userPropName&gt;=&lt;username&gt; and &lt;passwordPropName&gt;=&lt;password&gt;, where &lt;userPropName&gt; and &lt;passwordPropName&gt; are specified by the corresponding parameters. If the operator loses connection to the RabbitMQ server, or it fails authentication, it will check for new credentials in the appConfig and attempt to reconnect if they exist. The attempted reconnection will only take place if automaticRecovery is set to true (which it is by default).</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>automaticRecovery</name>
        <description>Have connections to RabbitMQ automatically recovered. Default is true.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>exchangeName</name>
        <description>Name of the RabbitMQ exchange to bind the queue to. If consuming from an already existing queue, this parameter is ignored. To use default RabbitMQ exchange, do not specify this parameter or use empty quotes: "".</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>exchangeType</name>
        <description>Optional attribute. Name of the RabbitMQ exchange type. Default direct.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>hostAndPort</name>
        <description>List of host and port in form: "myhost1:3456","myhost2:3456".</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>-1</cardinality>
      </parameter>
      <parameter>
        <name>messageAttribute</name>
        <description>Name of the attribute for the message. Default is "message".</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>msgHeaderAttribute</name>
        <description>Name of the attribute for the message_header. Schema of type must be Map&lt;ustring,ustring&gt;. Default is "message_header".</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>password</name>
        <description>Password for RabbitMQ authentication.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>passwordPropName</name>
        <description>This parameter specifies the property name of password in the application configuration. If the appConfigName parameter is specified and the passwordPropName parameter is not set, a compile time error occurs.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>queueName</name>
        <description>Name of the queue. Main reason to specify is to facilitate parallel consuming. If this parameter is not specified, a queue will be created using a randomly generated name.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>routingKey</name>
        <description>Routing key/keys to bind the queue to. If you are connecting to an existing queue, these bindings will be ignored.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>-1</cardinality>
      </parameter>
      <parameter>
        <name>routingKeyAttribute</name>
        <description>Name of the attribute for the routing_key. Default is "routing_key".</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>setNetworkRecoveryInterval</name>
        <description>If automaticRecovery is set to true, this is the interval (in ms) that will be used between reconnection attempts. The default is 5000 ms.</description>
        <optional>true</optional>
        <type>int64</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>userPropName</name>
        <description>This parameter specifies the property name of user name in the application configuration. If the appConfigName parameter is specified and the userPropName parameter is not set, a compile time error occurs.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>username</name>
        <description>Username for RabbitMQ authentication.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>virtualHost</name>
        <description>Set Virtual Host. Default is null.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts/>
    <outputPorts>
      <outputPortSet>
        <description>Messages received are sent on this output port.</description>
        <windowPunctuationOutputMode>Free</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
    </outputPorts>
  </javaOperatorModel>
</operatorModel>